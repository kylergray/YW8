{"version":3,"sources":["Card.js","YW8.png","App.js","reportWebVitals.js","index.js"],"names":["Restaurant","props","loadMaps","window","open","state","url","mapsLink","place_id","console","log","this","className","Card","sx","maxWidth","minWidth","CardActionArea","onClick","CardContent","Typography","gutterBottom","variant","component","name","color","Math","round","parseInt","wait_time","walk_time","Component","App","restuarants","objects","lat","lng","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","longitude","fetch","then","response","json","data","forEach","element","location","push","itemList","i","length","src","logo","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c79ed414.chunk.js","sourcesContent":["import {React, Component} from 'react';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport { CardActionArea } from '@mui/material';\nimport { IoHourglassSharp } from \"react-icons/io5\";\nimport { ImClock2 } from \"react-icons/im\";\nimport { CgMathEqual } from \"react-icons/cg\";\nimport { MdDirectionsWalk } from \"react-icons/md\";\nimport { AiOutlinePlus } from \"react-icons/ai\";\nimport './Card.css';\n\nclass Restaurant extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tconst mapsLink = \"https://www.google.com/maps/place/?q=place_id:\" + this.props.props.place_id;\n\t\tthis.state = {\n\t\t\turl: mapsLink\n\t\t}\n\t}\n\n\tloadMaps = () => {\n\t\twindow.open(this.state.url, '_blank');\n\t}\n\n\n\trender() {\n    console.log(this.props)\n\t\treturn (\n\t\t\t<div className=\"card\">\n\t\t\t\t<Card sx={{ maxWidth: 500, minWidth: 500 }}>\n\t\t\t\t\t<CardActionArea onClick={this.loadMaps}>\n\t\t\t\t\t\t{/* <CardMedia\n\t\t\t\t\t\tcomponent=\"img\"\n\t\t\t\t\t\theight=\"140\"\n\t\t\t\t\t\timage={\"https://maps.googleapis.com/maps/api/place/photo?maxwidth=400&photoreference=\"+ this.props.props.photos.photo_reference + \"&key=AddYourOwnKeyHere\"}\n\t\t\t\t\t\talt=\"green iguana\"\n\t\t\t\t\t\t/> */}\n\t\t\t\t\t\t<CardContent >\n\t\t\t\t\t\t<Typography gutterBottom variant=\"h5\" component=\"div\">\n\t\t\t\t\t\t\t{this.props.props.name}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography variant=\"h6\" color=\"text.secondary\" className=\"cardcontent\">\n              \t\t\t\t<IoHourglassSharp className=\"icon\"/> {Math.round(parseInt(this.props.props.wait_time) / 2)} min <AiOutlinePlus className=\"plus\"/> \n\t\t\t\t\t\t\t  <MdDirectionsWalk className=\"icon\"/> {Math.round(this.props.props.walk_time)} min\n\t\t\t\t\t\t\t<CgMathEqual className=\"icon\"/> <ImClock2 className=\"clock\" /> {Math.round(parseInt(this.props.props.wait_time) / 2) + Math.round(this.props.props.walk_time)} min\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t</CardActionArea>\n\t\t\t\t</Card>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n\nexport default Restaurant;","export default __webpack_public_path__ + \"static/media/YW8.7bcf75fe.png\";","import './App.css';\nimport {Component} from 'react';\nimport Restaurant from './Card.js';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport logo from './YW8.png';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      restuarants: [],\n      objects: [],\n      lat: 47.658101130283974,\n      lng: -122.31845242186691\n    };\n    // this.state = example\n  }\n\n  componentDidMount() {\n    // Simple GET request using fetch\n    if (\"geolocation\" in navigator) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        this.setState({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        });\n\n        const url = \"http://128.208.1.137:5000/data?lat=\" + this.state.lat + \"&lng=\" + this.state.lng;\n\n        fetch(url)\n          .then(response => response.json())\n          .then(data => {\n            console.log(data);\n            this.setState({restuarants: data});\n            // this.setState({objects: []});\n            let objects = [];\n            data.forEach(element => {\n              const location = <Card props={{data: element}} key={element.place_id}/>;\n              objects.push(location);\n            });\n            this.setState({objects: objects});\n            console.log(this.state)\n          });\n        console.log(\"loaded\")\n        console.log(this.state);\n\n      });\n    }\n\n   }\n\n  componentDidUpdate() {\n    console.log(\"update\")\n  }\n\n  render() {\n    console.log(\"render\")\n    let itemList = [];\n    const data = this.state.restuarants;\n    for (let i = 0; i < this.state.restuarants.length; i++) {\n      itemList.push(<Restaurant props={data[i]} key={i}/>);\n    }\n    return (\n      <div className=\"App\">\n        <Card sx={{ maxWidth: 500 }} className=\"header\">     \n            <CardContent className=\"card-content\">\n            <img className=\"logo\" src={logo} alt=\"\"/>\n              <Typography variant=\"h5\" component=\"div\">\n                  Explore Food\n              </Typography>\n            </CardContent>          \n          </Card>\n        {itemList}\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}